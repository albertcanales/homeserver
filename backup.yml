---
- hosts: homeserver
  gather_facts: yes
  become: yes    

  tasks:

    # Prepare backup destination

    - name: Ensure Backup Drive is mounted
      mount:
        src: "UUID={{ backup_drive_uuid }}"
        path: "{{ backup_drive_path }}"
        fstype: ext4
        boot: false
        state: mounted
      when: mount_backup_drive
      tags: mount

    - name: Ensure Backup directory exists
      file:
        path: "{{ backup_path }}"
        state: directory

    - name: Get Backup Timestamp
      shell: date +%Y-%m-%d-%H-%M
      register: backtup_timestamp
      changed_when: false
      when: timestamped_backup

    - name: Set Timestamped Backup Destination facts
      set_fact: 
        backup_dest: "{{ backup_path }}/{{ backtup_timestamp.stdout }}"
        backup_volumes_dest: "{{ backup_path }}/{{ backtup_timestamp.stdout }}/volumes"
      when: timestamped_backup
    
    - name: Set Non Timestamped Backup Destination facts
      set_fact: 
        backup_dest: "{{ backup_path }}"
        backup_volumes_dest: "{{ backup_path }}/volumes"
      when: not timestamped_backup

    - name: Create Backup destination directory
      file:
        path: "{{ backup_dest }}"
        state: directory

    # Backup container volumes

    - name: Backup Docker Services
      include_role:
        name: "{{ item }}"
        tasks_from: backup
      with_items: "{{ containers }}"

    # Backup other directories

    - name: Create data directories
      file:
        path: "{{ backup_dest }}/{{ item.name }}"
        state: directory
      with_items: "{{ backup_directories }}"
      when: item.should_backup
    
    - name: Backup data directories
      synchronize:
        src: "{{ item.path }}"
        dest: "{{ backup_dest }}"
      delegate_to: "{{ inventory_hostname }}"
      with_items: "{{ backup_directories }}"
      when: item.should_backup

    - name: Ensure Backup Drive is unmounted
      mount:
        path: "{{ backup_drive_path }}"
        state: unmounted
      when: mount_backup_drive
      tags: unmount